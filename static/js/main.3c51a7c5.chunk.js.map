{"version":3,"sources":["components/FormTodo/FormTodo.js","components/Todo/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["FormTodo","addTodo","React","useState","value","setValue","Form","onSubmit","e","preventDefault","Group","Label","Control","type","className","onChange","target","placeholder","Button","variant","Todo","todo","index","markTodo","removeTodo","style","textDecoration","isDone","text","onClick","App","todos","setTodos","newTodos","splice","map","Card","Body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAyBeA,MAtBf,YAAgC,IAAZC,EAAW,EAAXA,QAAW,EACHC,IAAMC,SAAS,IADZ,mBACtBC,EADsB,KACfC,EADe,KAU7B,OACE,eAACC,EAAA,EAAD,CAAMC,SARa,SAAAC,GACnBA,EAAEC,iBACGL,IACLH,EAAQG,GACRC,EAAS,MAIT,UACE,eAACC,EAAA,EAAKI,MAAN,WACE,cAACJ,EAAA,EAAKK,MAAN,UAAY,2CACZ,cAACL,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOC,UAAU,QAAQV,MAAOA,EAAOW,SAAU,SAAAP,GAAC,OAAIH,EAASG,EAAEQ,OAAOZ,QAAQa,YAAY,oBAEjH,cAACC,EAAA,EAAD,CAAQC,QAAQ,eAAeN,KAAK,SAApC,wBCDSO,MAff,YAAsD,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WACrC,OACE,sBACEV,UAAU,OADZ,UAIE,sBAAMW,MAAO,CAAEC,eAAgBL,EAAKM,OAAS,eAAiB,IAA9D,SAAqEN,EAAKO,OAC1E,gCACE,cAACV,EAAA,EAAD,CAAQC,QAAQ,kBAAkBU,QAAS,kBAAMN,EAASD,IAA1D,oBAA6E,IAC7E,cAACJ,EAAA,EAAD,CAAQC,QAAQ,iBAAiBU,QAAS,kBAAML,EAAWF,IAA3D,yBALGA,I,oBCmDIQ,MAlDf,WAAgB,IAAD,EACa5B,IAAMC,SAAS,CACvC,CACEyB,KAAM,uBACND,QAAQ,KAJC,mBACNI,EADM,KACCC,EADD,KAaPT,EAAW,SAAAD,GACf,IAAMW,EAAQ,YAAOF,GACrBE,EAASX,GAAOK,QAAUM,EAASX,GAAOK,OAC1CK,EAASC,IAGLT,EAAa,SAAAF,GACjB,IAAMW,EAAQ,YAAOF,GACrBE,EAASC,OAAOZ,EAAO,GACvBU,EAASC,IAGX,OACE,qBAAKnB,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,mBAAd,uBACA,cAAC,EAAD,CAAUb,QArBA,SAAA2B,GACd,IAAMK,EAAQ,sBAAOF,GAAP,CAAc,CAAEH,UAC9BI,EAASC,MAoBL,8BACGF,EAAMI,KAAI,SAACd,EAAMC,GAAP,OACT,cAACc,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UACE,cAAC,EAAD,CAEEf,MAAOA,EACPD,KAAMA,EACNE,SAAUA,EACVC,WAAYA,GAJPF,MAHAA,cC5BRgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3c51a7c5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\n\r\nfunction FormTodo({ addTodo }) {\r\n  const [value, setValue] = React.useState(\"\");\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (!value) return;\r\n    addTodo(value);\r\n    setValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group>\r\n        <Form.Label><b>Add Todo</b></Form.Label>\r\n        <Form.Control type=\"text\" className=\"input\" value={value} onChange={e => setValue(e.target.value)} placeholder=\"Add new todo\" />\r\n      </Form.Group>\r\n      <Button variant=\"primary mb-3\" type=\"submit\">\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\nexport default FormTodo","import React from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nfunction Todo({ todo, index, markTodo, removeTodo }) {\r\n  return (\r\n    <div\r\n      className=\"todo\"\r\n      key={index}\r\n    >\r\n      <span style={{ textDecoration: todo.isDone ? \"line-through\" : \"\" }}>{todo.text}</span>\r\n      <div>\r\n        <Button variant=\"outline-success\" onClick={() => markTodo(index)}>✓</Button>{' '}\r\n        <Button variant=\"outline-danger\" onClick={() => removeTodo(index)}>✕</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo","import React from \"react\";\nimport FormTodo from \"./components/FormTodo/FormTodo\";\nimport Todo from \"./components/Todo/Todo\";\nimport {Card} from 'react-bootstrap';\n\nimport \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [todos, setTodos] = React.useState([\n    {\n      text: \"This is a sampe todo\",\n      isDone: false\n    }\n  ]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const markTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isDone = !newTodos[index].isDone;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <h1 className=\"text-center mb-4\">Todo List</h1>\n        <FormTodo addTodo={addTodo} />\n        <div>\n          {todos.map((todo, index) => (\n            <Card key={index}>\n              <Card.Body>\n                <Todo\n                  key={index}\n                  index={index}\n                  todo={todo}\n                  markTodo={markTodo}\n                  removeTodo={removeTodo}\n                />\n              </Card.Body>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}